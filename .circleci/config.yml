docker_auth: &docker_auth
  auth:
    username: $DOCKER_USERNAME
    password: $DOCKER_PASSWORD

workspace: &workspace
  at: ~/slack-webhook-facade

slack_image: &slack_image
  docker:
    - image: devatherock/simple-slack:1.0.0
      <<: *docker_auth

work_directory: &work_directory
  working_directory: ~/slack-webhook-facade

resource_class: &resource_class
  resource_class: small

release_filter: &release_filter
  filters:
    branches:
      only: non-existent-branch
    tags:
      only: /^v[0-9\.]+$/

parameters:
  repo_name:
    type: string
    default: "slack-webhook-facade"

executors:
  docker-executor:
    docker:
    - image: cimg/go:1.14
      <<: *docker_auth
    <<: *resource_class
    <<: *work_directory

version: 2.1
jobs:
  test:
    executor: docker-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-pkg-cache-{{ checksum "go.mod" }}
            - v1-pkg-cache
      - run: make check

  build:
    executor: docker-executor
    environment:
      CGO_ENABLED: 0
      GOOS: linux
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-pkg-cache-{{ checksum "go.mod" }}
            - v1-pkg-cache
      - run: |
          make coveralls
          make build
      - save_cache:
          paths:
            - "/go/pkg"
          key: v1-pkg-cache-{{ checksum "go.mod" }}
      - persist_to_workspace:
          root: ~/slack-webhook-facade
          paths:
            - docker/slackwebhookfacade

  publish:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          <<: *workspace
      - run: |
          TAG=${CIRCLE_SHA1:0:8}
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker build -t devatherock/slack-webhook-facade:$TAG docker
          docker tag devatherock/slack-webhook-facade:$TAG devatherock/slack-webhook-facade:latest
          docker push devatherock/slack-webhook-facade:$TAG
          docker push devatherock/slack-webhook-facade:latest

  publish_release:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          <<: *workspace
      - run: |
          TAG=${CIRCLE_TAG#v}
          DEV_TAG=${CIRCLE_SHA1:0:8}
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker pull devatherock/slack-webhook-facade:$DEV_TAG
          docker tag devatherock/slack-webhook-facade:$DEV_TAG devatherock/slack-webhook-facade:$TAG
          docker push devatherock/slack-webhook-facade:$TAG

  dockerhub_readme:
    docker:
      - image: peterevans/dockerhub-description:3.4.2
        <<: *docker_auth
    <<: *resource_class
    <<: *work_directory
    environment:
      DOCKERHUB_REPOSITORY: 'devatherock/<< pipeline.parameters.repo_name >>'
      SHORT_DESCRIPTION: 'A Slack webhook facade to post messages to other chat clients like Zulip'
      README_FILEPATH: README.md
    steps:
      - checkout
      - attach_workspace:
          <<: *workspace
      - run: |
          sh /entrypoint.sh

  deploy:
    executor: docker-executor
    steps:
      - run:
          name: Trigger deployment to render.com
          command: |
            curl $RENDER_DEPLOY_HOOK

  notify:
    <<: *slack_image
    <<: *resource_class
    environment:
      TEXT: "Success: {{.CircleBuildUrl}} by {{.CircleUsername}}"
      CHANNEL: general
      TITLE: "Build completed"
    steps:
      - run: /bin/simpleslack -c "#33ad7f" || true

workflows:
  version: 2.1
  build_publish:
    jobs:
      - build:
          context:
            - docker-credentials
          filters:
            branches:
              only: master
      - publish:
          context:
            - docker-credentials
          requires:
            - build
      - dockerhub_readme:
          context:
            - docker-credentials
            - dockerhub-readme-credentials
          requires:
            - publish
      - notify:
          context:
            - docker-credentials
            - slack-webhook
          requires:
            - dockerhub_readme

  release:
    jobs:
      - publish_release:
          context:
            - docker-credentials
          <<: *release_filter
      - deploy:
          context:
            - docker-credentials
          <<: *release_filter
          requires:
            - publish_release
      - notify:
          context:
            - docker-credentials
            - slack-webhook
          <<: *release_filter
          requires:
            - deploy

  pr_check:
    jobs:
      - test:
          context:
            - docker-credentials
          filters:
            branches:
              ignore: master
